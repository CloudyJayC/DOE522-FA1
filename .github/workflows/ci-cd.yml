name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Restore dependencies
        run: dotnet restore
        working-directory: src/Pipeline

      - name: Build
        run: dotnet build --configuration Release
        working-directory: src/Pipeline

      - name: Publish
        run: dotnet publish --configuration Release --output ./publish
        working-directory: src/Pipeline

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET #Commands used to setup the .net file
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Restore dependencies #Code used to restore the Dependencies
        run: dotnet restore
        working-directory: src/Pipeline

      - name: Run tests #This is the code used to run the tests
        run: dotnet test --no-restore --verbosity normal
        working-directory: src/Pipeline

      - name: Code Coverage
        run: dotnet test --no-restore --collect:"XPlat Code Coverage"
        working-directory: src/Pipeline

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Staging
        run: |
          # This is where the code for Deploying step goes to
          echo "Deploying to staging environment..."
        working-directory: src/Pipeline

  notify: #Code used to send notifications
    runs-on: ubuntu-latest
    needs: [build, test, deploy]
    if: failure()  # Notify only if previous jobs failed
    steps:
      - name: Create GitHub Issue on Failure
        run: |
          curl -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/json" \
          -d '{"title":"CI/CD Pipeline Failed","body":"The pipeline failed during one of the following jobs: build, test, or deploy. Please check the logs for more details.","labels":["bug","CI/CD"]}' \
          https://api.github.com/repos/${{ github.repository }}/issues
