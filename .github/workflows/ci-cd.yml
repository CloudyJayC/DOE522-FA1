name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Restore dependencies
        run: dotnet restore
        working-directory: src/Pipeline

      - name: Build
        run: dotnet build --configuration Release
        working-directory: src/Pipeline

      - name: Publish
        run: dotnet publish --configuration Release --output ./publish
        working-directory: src/Pipeline

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Restore dependencies
        run: dotnet restore
        working-directory: src/Pipeline

      - name: Run tests
        run: dotnet test --no-restore --verbosity normal
        working-directory: src/Pipeline
      
      - name: Intentional Failure
        run: exit 1  # This command will fail and trigger the notify job

      - name: Code Coverage
        run: dotnet test --no-restore --collect:"XPlat Code Coverage"
        working-directory: src/Pipeline

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Staging
        run: |
          # Add your deployment script here
          echo "Deploying to staging environment..."
        working-directory: src/Pipeline

  notify:
    runs-on: ubuntu-latest
    needs: [build, test, deploy]
    if: failure()  # Notify only if previous jobs failed
    steps:
      - name: Send notification email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.SMTP_USER }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "Build or Deployment Failed"
          body: "Build or deployment failed! Please check the GitHub Actions for more details."
          to: ${{ secrets.EMAIL_TO }}
          from: ${{ secrets.EMAIL_FROM }}
